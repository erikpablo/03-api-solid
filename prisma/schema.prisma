generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MEMBER
  ADMIN
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  role          Role     @default(MEMBER)
  created_at    DateTime @default(now())

  checkIns CheckIn[]

  @@map("users")
}

model CheckIn {
  id           String    @id @default(uuid())
  created_at   DateTime  @default(now())
  validated_at DateTime?

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  gym    Gym    @relation(fields: [gym_Id], references: [id])
  gym_Id String

  @@map("check_ins")
}

model Gym {
  id          String  @id @default(uuid())
  title       String
  description String?
  phone       String?
  latitude    Decimal
  longitude   Decimal

  checkIns CheckIn[]

  @@map("gyms")
}

/**
 * um user faz login, entao teremos um user_id desse checkin
 * Assim como teremos tambem o id da gym
 * user   User   @relation(fields: [userId], references: [id])
 * userId String
 * --Com o outo incremente do prisma, usando o user User(nome da tabela)
 * ele adiciona toda a relacao do campo
 * Tambem criando no user o  CheckIn CheckIn[], falando que o User tera farios checkin
 * --Lembrando que esses dados nao iram cria tabela
 * Somente o user_id e  gym_Id String
 */
